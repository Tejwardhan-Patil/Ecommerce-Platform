name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Java microservices build and test
  build-java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - InventoryService
          - OrderService
          - PaymentService
          - NotificationService
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and test ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        run: |
          mvn clean install

  # Python service (RecommendationService) build and test
  build-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./RecommendationService
        run: |
          pip install -r requirements.txt

      - name: Run Python tests
        working-directory: ./RecommendationService
        run: |
          pytest --junitxml=report.xml

  # Node.js (React frontend) build and test
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: |
          npm test

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm run build

  # Docker build and push
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push InventoryService Docker image
        working-directory: ./InventoryService
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/inventory-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/inventory-service:latest

      - name: Build and push OrderService Docker image
        working-directory: ./OrderService
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/order-service:latest